
  *********--*************************************************************************************
  * Q21    :: Which lines can be remove and let code compile successful ? ( single selection )
  *        :: 哪些行可以删除并让代码编译成功 ？（ 单选 ）
  *********--*************************************************************************************
  *
  *  1: Collections.sort( Arrays.asList( 10, 4, -1, 5 ) );
  *  2: Collections.sort( List.of( 10, 4, -1, 5 ) );
  *  3: Collections.sort( new ArrayList.addAll( 10, 4, -1, 5 ) );
  *  4: Collections.sort( new ArrayList( List.of( 10, 4, -1, 5 ) ) );
  *  5: Collections.sort( Stream.of( 10, 4, -1, 5 ).collect( Collectors.toList() ) );
  * 
  *  A: 2 3 4
  *  B: 2 5
  *  C: 1 2 5
  *  D: none of these
  *  E: 2 3
  *
  *
  *						


  *********--*************************************************************************************
  * note   :: 
  *********--*************************************************************************************
  *
  *
  *
  
  *********--*************************************************************************************
  * ans at line 90 ::
  *********--*************************************************************************************

  try it :: 
  _____________________________________________________________					
      
    clear ; sh jrunscrip.sh \
    '--content=
    
       // ---------------------------------------------------------------
       // create list                                               ---
       // ---------------------------------------------------------------
          List<Integer> list = Arrays.asList( 10, 4, -1, 5 );
       
       // ---------------------------------------------------------------
       // sort   list                                               --- 
       // ---------------------------------------------------------------
          // list.sort( ( s, f ) -> f.compareTo( s ) );
          Collections.sort( list );
          // Collections.sort( list, ( s, f ) -> f.compareTo( s ) );
          
       // ---------------------------------------------------------------
       // output list                                               --- 
       // ---------------------------------------------------------------
          System.out.println( "\n1: list : " + list );
          
    '
    
    clear ; sh jrunscrip.sh \
    '--content=
    
       // ---------------------------------------------------------------
       // create list                                               --- 
       // ---------------------------------------------------------------
          List<Integer> list = List.of( 10, 4, -1, 5 );
    
       // ---------------------------------------------------------------
       // sort   list                                               --- 
       // ---------------------------------------------------------------
          list.sort( ( s, f ) -> f.compareTo( s ) );
          // Collections.sort( list );
          
       // ---------------------------------------------------------------
       // output list                                               --- 
       // ---------------------------------------------------------------
          System.out.println( "\n1: list : " + list );
       
    '
    
    clear ; sh jrunscrip.sh \
    '--content=
       Collections.sort(    Arrays.asList( 10, 4, -1, 5 ) );
       //Collections.sort( List.of( 10, 4, -1, 5 ) );
       //Collections.sort( new ArrayList.addAll( 10, 4, -1, 5 ) );
       Collections.sort( new ArrayList( List.of( 10, 4, -1, 5 ) ) );
       Collections.sort( Stream.of( 10, 4, -1, 5 ).collect( Collectors.toList() ) );
    '


  *********--*************************************************************************************
  * ans 21 :: B
  *********--*************************************************************************************
  *	
  *  ====------------=----------------------------------------------------------------------------
  *       A: 2 3 4
  *  ====------------=----------------------------------------------------------------------------
  *
  *	
  *  ====------------=----------------------------------------------------------------------------
  *       B: 2 5
  *  ====------------=----------------------------------------------------------------------------
  *
  *	
  *  ====------------=----------------------------------------------------------------------------
  *       C: 1 2 5
  *  ====------------=----------------------------------------------------------------------------
  *
  *	
  *  ====------------=----------------------------------------------------------------------------
  *       D: none of these
  *  ====------------=----------------------------------------------------------------------------
  *
  *	
  *  ====------------=----------------------------------------------------------------------------
  *  [V]  E: 2 3
  *  ====------------=----------------------------------------------------------------------------
  *
  *	
  *
